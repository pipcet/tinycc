From 3d5b6108c55860066aa1c4362f4372cf97b630ba Mon Sep 17 00:00:00 2001
From: Matteo Cypriani <mcy@lm7.fr>
Date: Fri, 5 Sep 2014 23:22:56 -0400
Subject: Disable floating-point test for ARM soft-float

tcc is not yet capable of doing softfloat floating-point operations on
ARM, therefore we disable this test for these platforms. Note that tcc
displays a warning to warn ARM users about this limitation.

Origin: vendor
Forwarded: no
Last-Update: 2014-09-07
---
 tests/tcctest.c       |  2 ++
 tests/tests2/Makefile | 13 +++++++++++--
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/tests/tcctest.c b/tests/tcctest.c
index cc8ffd8..78bb785 100644
--- a/tests/tcctest.c
+++ b/tests/tcctest.c
@@ -1760,6 +1760,7 @@ double ftab1[3] = { 1.2, 3.4, -5.6 };
 
 void float_test(void)
 {
+#if !defined(__arm__) || defined(__ARM_PCS_VFP)
     float fa, fb;
     double da, db;
     int a;
@@ -1785,6 +1786,7 @@ void float_test(void)
     b = 4000000000;
     db = b;
     printf("db = %f\n", db);
+#endif
 }
 
 int fib(int n)
diff --git a/tests/tests2/Makefile b/tests/tests2/Makefile
index 66d2f5a..1068105 100644
--- a/tests/tests2/Makefile
+++ b/tests/tests2/Makefile
@@ -41,8 +41,17 @@ TESTS =	\
  18_include.test \
  19_pointer_arithmetic.test \
  20_pointer_comparison.test \
- 21_char_array.test \
- 22_floating_point.test \
+ 21_char_array.test
+
+ifeq ($(findstring -DTCC_ARM_EABI,$(NATIVE_DEFINES)),)
+	TESTS += 22_floating_point.test
+else
+	ifneq ($(findstring -DTCC_ARM_HARDFLOAT,$(NATIVE_DEFINES)),)
+		TESTS += 22_floating_point.test
+	endif
+endif
+
+TESTS += \
  23_type_coercion.test \
  24_math_library.test \
  25_quicksort.test \
